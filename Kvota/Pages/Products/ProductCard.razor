@page "/productlists/{id:guid}"
@inject IServiceScopeFactory ServiceScopeFactory
@inject IWebHostEnvironment env
@inject IRepo<ContactsModel> ContactService
@using FileInfo = System.IO.FileInfo
@using Kvota.Models.Content
@using Kvota.Interfaces
@if (Product != null)
{
    <div class="product-card">
        
        <div >
            
        </div>
        <div class="product-card__body">

            <a class="product-card__image-body" @onclick="@(e => GetModalImage())">
                @if (Product.Image == "image\\products\\default.jpg")
                {
                    @*<img class="product-card__image" src="image/products/default.jpg"/>*@
                    <div class="product-card__image" style="background: url(/image/products/default.jpg)50% 50%/contain no-repeat "></div>
                }
                else
                {
                    @if (Directory.Exists($"{env.WebRootPath}\\{Product.Image}"))
                    {
                        var imageFirst = Directory.GetFiles($"{env.WebRootPath}\\{Product.Image}").FirstOrDefault();
                        var fileInfo = (Product.Image.Replace("\\","/")) + "/" + (new FileInfo(imageFirst).Name);
                     
                        <div class="product-card__image" style="background: url(@fileInfo)50% 50%/contain no-repeat "></div>
                    }
                }
            </a>

            <div class="product-card__top-body top-body">
                <h1 class="product-card__name">@Product.Name</h1>
                <div class="top-body__num">
                    <p class="product-card__pnumber product__text">Артикул: @Product.PartNumber</p>
                    <div>
                        @if (Product.Brand != null)
                        {
                            if (Product.Brand.Image==null)
                            {
                                <span class="product-card__brand product__text">@Product.Brand!.Name</span>
                            }
                            else
                            {
                                var uri = Product.Brand.Image!.Replace("\\", "/");
                                <div class="product-card__brand product__text" style="background: url(@uri)50% 50%/contain no-repeat;"></div>
                            }
                            
                        @*<img src="@Product.Brand.Image"/>*@
                        }
                    </div>
                </div>
                <div class="product__prices">
                    @if (Product.SalePrice != null)
                    {
                        <span class="product-card__sale ">@Product.SalePrice руб.</span>
                    }
                    @if (Product.Price != null)
                    {
                        <span class="product-card__price ">@Product.Price руб.</span>
                    }
                    <div class="product-card__feetback">
                        <Dropdown OnShowing="OnDropdownShowingAsync">
                            <DropdownToggleButton  Color="ButtonColor.Secondary">Уточнить наличие и цену</DropdownToggleButton>
                            <DropdownMenu>
                            @if (Contacts != null)
                            {
                                <DropdownItem Type="ButtonType.Link">
                                    <a href="tel:@Contacts.PhoneOne" target="_blank">
                                        <i class="bi bi-telephone" style="font-size: 1.5rem; margin-right: 1rem"></i>@Contacts.PhoneOne
                                    </a>
                                </DropdownItem>
                                <DropdownItem Type="ButtonType.Link">
                                        <a href="mailto:@Contacts.EmailOne">
                                        <i class="bi bi-envelope-at" style="font-size: 1.5rem; margin-right: 1rem"></i>@Contacts.EmailOne
                                    </a>
                                </DropdownItem>
                            }
                            </DropdownMenu>
                        </Dropdown>
                    </div>


                </div>
                @if (Product.Quantity != null)
                {
                    var sumQuantity = Product.QuantityTwo != null ? Product.Quantity + Product.QuantityTwo : Product.Quantity;
                    <div class="product-card__quantity product__text">Наличие: @sumQuantity шт.</div>
                }
               
                
            </div>

        </div>
        <div class="product-card__tabs">
            <Tabs>
                <Tab Title="Описание" IsActive="true">
                    <Content>
                        @if (Product.Description != null)
                        {
                            <p class="product-card__description product__text">@Product.Description</p>
                        }
                    </Content>
                </Tab>
           
                <Tab Title="Харрактеристики">
                    <Content>
                    @if (Product.ProductOption != null && Product.ProductOption.Count != 0)
                    {
                        <div class="product-card__options">

                            @foreach (var option in Product.ProductOption)
                            {
                                <div class="product-card__option">
                                    <span class="product-card__optionName">@option.CategoryOption!.Name</span><span class="product-card__optionValue">@option.Value @option.CategoryOption.Measure</span>
                                </div>
                            }

                        </div>
                    }
                    </Content>
                </Tab>
            
            </Tabs>
        </div>


        
        <Modal 
            ShowCloseButton="false"
            OnShown="OnModalShown"
            UseStaticBackdrop="true" 
            Size="ModalSize.ExtraLarge"
              IsScrollable="true"
            @ref="_modalImage">
            <BodyTemplate>
                <div class=modalImage__body>
                    <button class="modalImage__closeBtn closeBtn" @onclick="OnHideModalClick">
                        <div class="closeBtn__btn closeBtn__up"></div>
                        <div class="closeBtn__btn closeBtn__down"></div>
                    </button>
                    <div class="slider ">
                            @if (Directory.Exists(_directoryPath))
                            {
                                @foreach (var file in Directory.GetFiles(_directoryPath!))
                                {
                                    var fileInfo = new FileInfo(file).Name;
                                    <div class="slider_item">

                                        <img class="slider_image" data-lazy="@Product.Image\\@fileInfo" />
                                    </div>
                                }
                            }
                    </div>
                </div>
            </BodyTemplate>
        </Modal>
    </div>
}
<style>
    .modal-body {
        padding: 0;
        min-height: 70vh;
       
    }
    .modalImage__body {
        position: relative;
        
    }
    .modalImage__closeBtn {
        position: absolute;
        z-index: 10;
        top: 0;
        right: 1rem;
        background: none;
        border: none;
    }
    .modalImage__closeBtn:active {
        transform: scale(0.8);
    }
    .closeBtn__btn {
        width: 2rem;
        height: 2rem;
        border-bottom: 5px solid rgba(255,255,255,0.5);
        border-right: 5px solid rgba(255,255,255,0.5);
        box-shadow: inset -5px -5px rgba(119, 136, 153,0.5);
    }
    .closeBtn__btn.closeBtn__up {
        transform: rotate(45deg);
        margin-bottom: 0.5rem;
    }
    .closeBtn__btn.closeBtn__down {
        transform: rotate(-135deg);
    }
    .slider {
        min-width: 0;
    }
    .slick-list {
        overflow: hidden;
    }
    .slick-track {
        display: flex;
    }
    .slider_image {
        height: 100%;
        width: 100%;
    }
    .slick-arrow{ 
        position: absolute;
        top: 50%;
        z-index: 10;
        font-size: 0;
        width: 3rem;
        height:3rem;
        border-top: none;
        border-left: none;
        border-bottom: 5px solid rgba(119, 136, 153,0.5);
        border-right: 5px solid rgba(119, 136, 153,0.5);
        box-shadow: inset -5px -5px rgba(255,255,255,0.5);
        background: none;
        margin: 0 1rem;
    }
    .slick-arrow:active {
        width: 2.5rem;
        height:2.5rem;
    }
    .slick-arrow.slick-prev {
        left: 0;
        transform: rotate(135deg);
    }
    .slick-arrow.slick-next {
        right: 0;
        transform: rotate(-45deg);
    }

</style>