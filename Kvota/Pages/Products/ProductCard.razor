@page "/productlists/{id:guid}"
@inject IServiceScopeFactory ServiceScopeFactory
@using FileInfo = System.IO.FileInfo
@using Kvota.Models.Content
@using Kvota.Interfaces
@using Kvota.Constants
@using ButtonType = BlazorBootstrap.ButtonType
@using Size = MudBlazor.Size
@inject ISerializeService<ContactsModel> ContactSerialize
@if (Product != null)
{
    <div class="product-card">

        <div class="product-card__body">

            <a class="product-card__image-body" @onclick="@(e => GetModalImage())">
                @if (Product.Image is Links.DefaultImageProduct or null)
                {
                    <div class="product-card__image" style="background: url(/image/products/default.jpg)50% 50%/contain no-repeat "></div>
                }
                else
                {
                   @if (Directory.Exists(_directoryPath))
                   {
                        var imageFirst = Directory.GetFiles($"{Links.RootPath}{Product.Image.Replace("\\","/")}").FirstOrDefault();
                        var fileInfo = (Product.Image.Replace("\\","/")) + "/" + (new FileInfo(imageFirst!).Name);
                        <div class="product-card__image" style="background: url(@fileInfo)50% 50%/contain no-repeat "></div>
                   }
                }
            </a>

            <div class="product-card__top-body top-body">
                <h1 class="product-card__name">@Product.Name</h1>
                <div class="top-body__num">
                    <span class="product-card__pnumber product__text">Парт-номер:
                        @if (Product.PartNumber != null)
                        {
                            @Product.PartNumber
                        }
                    </span>
                    <div>
                        @if (Product.Brand != null)
                        {
                            if (Product.Brand.Image==null)
                            {
                                <span class="product-card__brand product__text"><span class="product__text">Производитель:</span> @Product.Brand!.Name</span>
                            }
                            else
                            {
                                <div class="product-card__brand product__text" style="background: url(@Product.Brand.Image)50% 50%/contain no-repeat;"></div>
                            }
                        }
                    </div>
                </div>
                <div class="product__prices">
                    @if (Product.Price != null)
                    {
                        @if (Product.SalePrice != null)
                        {
                            <span class="product-card__sale ">@Math.Round((double)((Product.Price! / 100) * (100 - Product.SalePrice)), 2) руб.</span>
                        }
                        <span class="product-card__price ">@Product.Price руб.</span>
                    }
                    <div class="product-card__feetback">
                        <Dropdown OnShowing="OnDropdownShowingAsync">
                            <DropdownToggleButton Color="ButtonColor.Secondary">Уточнить наличие и цену</DropdownToggleButton>
                            <DropdownMenu>
                                @if (Contacts != null)
                                {
                                    <DropdownItem Type="ButtonType.Link">
                                        <a href="tel:@Contacts.PhoneOne" target="_blank">
                                            <i class="bi bi-telephone" style="font-size: 1.5rem; margin-right: 1rem"></i>@Contacts.PhoneOne
                                        </a>
                                    </DropdownItem>
                                    <DropdownItem Type="ButtonType.Link">
                                        <a href="mailto:@Contacts.EmailOne">
                                            <i class="bi bi-envelope-at" style="font-size: 1.5rem; margin-right: 1rem"></i>@Contacts.EmailOne
                                        </a>
                                    </DropdownItem>
                                }
                            </DropdownMenu>
                        </Dropdown>
                    </div>
                </div>
                @if (Product.ProductsInStorage ==null || !Product.ProductsInStorage.Any()|| Product.ProductsInStorage.Select(s=>s.Quantity).Sum()==0)
                {
                    <span>Нет в наличии.</span>
                    if (Product.DayToDelivery != null)
                    {
                        <div class="product-card__quantity product__text">
                            При заказе ожидаемая дата поставки @(DateTime.Now.AddDays((double)Product.DayToDelivery).ToString("dd/MM/yy"))
                        </div> 
                    }
                }
                else
                {
                    foreach (var productsInStorage in Product.ProductsInStorage)
                    {
                        <div class="product-card__quantity product__text">@productsInStorage.Storage!.Name-- @productsInStorage.Quantity шт. в наличии</div>
                    }
                }
            </div>

        </div>
        <div class="product-card__tabs">
            <Tabs>
                <Tab Title="Описание" IsActive="true">
                    <Content>
                        @if (Product.Description != null)
                        {
                            <p class="product-card__description product__text">@Product.Description</p>
                        }
                    </Content>
                </Tab>
           
                <Tab Title="Харрактеристики">
                    <Content>
                    @if (Product.ProductOption != null && Product.ProductOption.Count != 0)
                    {
                        <div class="product-card__options">

                            @foreach (var option in Product.ProductOption)
                            {
                                <div class="product-card__option">
                                    <span class="product-card__optionName">@option.CategoryOption!.Name</span><span class="product-card__optionValue">@option.Value @option.CategoryOption.Measure</span>
                                </div>
                            }

                        </div>
                    }
                    </Content>
                </Tab>
            
            </Tabs>
        </div>

        <MudDialog @bind-IsVisible="_visibleImageSlider" ClassContent="product-image__dialog" Class="m-0"  Options="new DialogOptions() {  NoHeader = true,FullScreen = true}" >
            <DialogContent>
                <MudIconButton Icon="@Icons.Material.TwoTone.Cancel" 
                               Color="Color.Info" 
                               Size="Size.Large" 
                               Class="modalImage__closeBtn" 
                               OnClick="OnHideModalClick"></MudIconButton>
                @if (Directory.Exists(_directoryPath))
                {
                    <MudCarousel Class="mud-width-full" Style="height: 100%" AutoCycle="false" TData="object">
                        <BulletTemplate Context="selected">
                            <div Class="mud-button-root mud-icon-button mud-icon-button-color-inherit mud-ripple mud-ripple-icon">
                                <span class="mud-icon-button-label">
                                    <MudIcon Icon="@(selected ? Icons.Material.TwoTone.CheckCircle : Icons.Material.TwoTone.Circle)" Color="@Color.Info"/>
                                </span>
                            </div>
                        </BulletTemplate>
                        <PreviousButtonTemplate>
                            <div Class="product-image__arrow prev"></div>
                        </PreviousButtonTemplate>
                        <NextButtonTemplate>
                            <div Class="product-image__arrow next"></div>
                        </NextButtonTemplate>
                        <ChildContent>
                            @foreach (var file in Directory.GetFiles(_directoryPath!))
                            {
                                var fileInfo = new FileInfo(file).Name;
                                <MudCarouselItem>
                                    <div class="d-flex justify-content-center align-items-center">
                                        @*<img class="slider_image" src="@Product.Image/@fileInfo"/>*@
                                        <MudImage ObjectFit="ObjectFit.Contain" ObjectPosition="ObjectPosition.Center" Style="height: 100VH; width: 100%" Src="@($"{Product.Image}/{fileInfo}")" Alt="Örebro Slott" Elevation="25" Class="rounded-lg" />
                                    </div>
                                </MudCarouselItem>
                            }


                        </ChildContent>
                    </MudCarousel>
                }
                else
                {
                    <MudImage ObjectFit="ObjectFit.Contain" ObjectPosition="ObjectPosition.Center" Style="height: 100VH; width: 100%" Src="@($"{Links.DefaultImageProduct}")" Alt="Örebro Slott" Elevation="25" Class="rounded-lg" />
                }
            </DialogContent>
        </MudDialog>
    </div>
}
<style>
    .product-image__dialog {
        padding: 0 !important;
        height: 100vh;
    }
    .product-image__arrow {
        font-size: 0;
        width: 3rem;
        height: 3rem;
        border-top: none;
        border-left: none;
        border-bottom: 5px solid rgba(119, 136, 153,0.5);
        border-right: 5px solid rgba(119, 136, 153,0.5);
        box-shadow: inset -5px -5px rgba(255,255,255,0.5);
        background: none;
        margin: 0 1rem;
    }
    .product-image__arrow:active {
            width: 2.5rem;
            height: 2.5rem;
        }

    .product-image__arrow.prev {
            left: 0;
            transform: rotate(135deg);
        }

    .product-image__arrow.next {
            right: 0;
            transform: rotate(-45deg);
    }
    .modalImage__closeBtn {
        position: absolute;
        z-index: 10;
        top: 0;
        right: 1rem;
        background: none;
        border: none;
    }
    .modalImage__closeBtn:active {
        transform: scale(0.8);
    }
  
</style>