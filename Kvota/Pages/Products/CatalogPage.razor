@page "/categories"
@page "/categories/brand/{brandid:guid}"
@using Kvota.Constants
@inject IServiceScopeFactory serviceScopeFactory
@using Kvota.Components.CategoryDrawer

<div class="catalog__body">
    @if (Brand != null)
    {
        <MudPaper class="d-flex m-3 p-3">
            @if (Brand.Image != null)
            {
                var uri = Brand.Image.Replace("\\", "/");
                        <div class="brndincategory__lable" style="background-image: url(@uri);"></div>
            }
            <h4 class="mx-2">@Brand.Name</h4>
            <p>@Brand.Description</p>
        </MudPaper>
    }
    <div class="catalog__grands">

        @if (Categories != null)
        {

            @foreach (var items in Categories.OrderBy(o => o.Name))
            {
                if (BrandId != null)
                {
                    <div class="catalog__grand grand kvota__body-shadow">
                        <div class="grand__image-body"><img class="grand__image" src="@items.Image"/></div>
                        <div class="grand__body">
                            @if (items.Children == null || !items.Children.Any())
                            {<a class="grand__title" href="@GroupNames.GroupCategory/@items.Name/@items.Id/@BrandId">@items.Name (@items.Products?.Where(w => w.BrandId == BrandId).Count())</a>}
                            else
                            {
                                <div class="grand__title">@items.Name</div>}

                            <div class="grand__category category-grand">

                                <div class="category-grand__body">
                                    @*<a class="category-grand__link" href="@GroupNames.GroupCategory/@item.Name/@item.Id">@item.Name</a>*@
                                    <MudList Style="" Clickable="true" @bind-SelectedItem="_selectedItem" @bind-SelectedValue="SelectedValue" Color="Color.Primary">
                                        @if (items.Children != null)
                                        {
                                            foreach (var category in items.Children.OrderBy(o => o.Name))
                                            {
                                                <CategoriesListReqursion Category="@category"
                                                                         RefreshCategoryListCallback="GetCategories"
                                                                         ChangeValue="ChangeValue"
                                                                         BrandId="BrandId"/>
                                            }
                                        }
                                    </MudList>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div class="catalog__grand grand kvota__body-shadow">
                        <div class="grand__image-body"><img class="grand__image" src="@items.Image"/></div>
                        <div class="grand__body">
                            @if (items.Children == null || !items.Children.Any())
                            {<a class="grand__title" href="@GroupNames.GroupCategory/@items.Name/@items.Id">@items.Name (@items.Products?.Count)</a>}
                            else
                            {
                                <div class="grand__title">@items.Name</div>}

                            <div class="grand__category category-grand">

                                <div class="category-grand__body">
                                    @*<a class="category-grand__link" href="@GroupNames.GroupCategory/@item.Name/@item.Id">@item.Name</a>*@
                                    <MudList Style="" Clickable="true" @bind-SelectedItem="_selectedItem" @bind-SelectedValue="SelectedValue" Color="Color.Primary">
                                        @if (items.Children != null)
                                        {
                                            foreach (var category in items.Children.OrderBy(o => o.Name))
                                            {
                                                <CategoriesListReqursion Category="@category"
                                                                         RefreshCategoryListCallback="GetCategories"
                                                                         ChangeValue="ChangeValue"/>
                                            }
                                        }
                                    </MudList>
                                </div>
                            </div>
                        </div>
                    </div>
                }

            }
        }
    </div>


</div>





